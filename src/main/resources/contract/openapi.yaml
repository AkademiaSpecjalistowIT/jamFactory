openapi: 3.0.3
info:
  title: JamFactory API
  version: 1.0.0
  description: API for creating jam production plans at JamFactory

servers:
  - url: http://localhost:8080/api/v1
    description: Jam server

tags:
  - name: ProductionPlans
    description: Endpoints related to creating jam production plans.
  - name: JarOrders
    description: Endpoints related to jar orders.

paths:
  /jams/product-plan:
    post:
      tags:
        - ProductionPlans
      summary: Create a new jam production plan
      operationId: createJamProductionPlan
      requestBody:
        description: Details of the production plan
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JamPlanProductionRequestDto'
      responses:
#        '204':
#          description: Production plan created successfully with no content
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
              example:
                orderId: "123e4567-e89b-12d3-a456-426614174000"
        '400':
          description: Production error or insufficient jars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectResponse'
        '422':
          description: Business logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectResponse'

    get:
      tags:
        - ProductionPlans
      summary: Get the production plan overview for the next 7 days
      operationId: getProductionPlan
      responses:
        '200':
          description: Production plan retrieved successfully for the next 7 days
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JamListPlanProductionResponseDto'
        '400':
          description: Error retrieving the production plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectResponse'

components:
  schemas:
    JarOrderRequestDto:
      type: object
      required:
        - deliveryDate
        - smallJars
        - mediumJars
        - largeJars
      properties:
        deliveryDate:
          type: string
          format: date
          example: "2024-10-15"
          description: "Date when the jars should be delivered."
        smallJars:
          type: integer
          example: 500
          description: "Number of small jars to be ordered."
        mediumJars:
          type: integer
          example: 300
          description: "Number of medium jars to be ordered."
        largeJars:
          type: integer
          example: 200
          description: "Number of large jars to be ordered."

#    JarOrderResponseDto:
#      type: object
#      properties:
#        orderId:
#          type: string
#          format: uuid
#          example: "123e4567-e89b-12d3-a456-426614174000"
#        deliveryDate:
#          type: string
#          format: date
#          example: "2024-10-15"
#        smallJars:
#          type: integer
#          example: 500
#        mediumJars:
#          type: integer
#          example: 300
#        largeJars:
#          type: integer
#          example: 200

    JamPlanProductionRequestDto:
      type: object
      required:
        - planDate
        - smallJamJars
        - mediumJamJars
        - largeJamJars
      properties:
        planDate:
          type: string
          format: date
          example: "2024-09-01"
          description: "Date of the production plan (cannot be null)"
        smallJamJars:
          type: integer
          minimum: 0
          example: 100
          description: "Number of small jam jars (cannot be null or negative)"
        mediumJamJars:
          type: integer
          minimum: 0
          example: 50
          description: "Number of medium jam jars (cannot be null or negative)"
        largeJamJars:
          type: integer
          minimum: 0
          example: 20
          description: "Number of large jam jars (cannot be null or negative)"

    JamPlanProductionResponseDto:
      type: object
      required:
        - planDate
        - smallJamJars
        - mediumJamJars
        - largeJamJars
      properties:
        planDate:
          type: string
          format: date
          example: "2024-09-01"
          description: "The date of the jam production plan"
        smallJamJars:
          type: integer
          example: 100
          description: "Number of small jam jars produced"
        mediumJamJars:
          type: integer
          example: 50
          description: "Number of medium jam jars produced"
        largeJamJars:
          type: integer
          example: 20
          description: "Number of large jam jars produced"

    JamListPlanProductionResponseDto:
      type: object
      required:
        - listPlans
        - sumSmallJamJars
        - sumMediumJamJars
        - sumLargeJamJars
      properties:
        listPlans:
          type: array
          items:
            $ref: '#/components/schemas/JamPlanProductionResponseDto'
        sumSmallJamJars:
          type: integer
          example: 600
        sumMediumJamJars:
          type: integer
          example: 900
        sumLargeJamJars:
          type: integer
          example: 1100

    OrderResponse:
      type: object
      properties:
        orderId:
          type: string
          description: "Unique order identifier"
          example: "123e4567-e89b-12d3-a456-426614174000"
      required:
        - orderId

    RejectResponse:
      type: object
      properties:
        rejectReason:
          type: string
          example: "Exceeded production capacity"
        code:
          type: string
          example: "BUSINESS_ERROR"
